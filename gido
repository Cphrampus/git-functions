#!/bin/bash

usage="usage: $0 [-t -h] command file [file]
-t: test, dry run, just print what would be run
-h: display this help"

if [[ $# -lt 2 ]]
then
	echo "$usage"
	exit
fi

num_flags=0
dry=true

while getopts ":th:" opt
do
	case $opt in
		h)
			echo "-h was triggered!" >&2
			echo "$usage"
			exit
			;;
		t)
			echo "-t was triggered!" >&2
			dry=true
			((num_flags++))
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			((num_flags++))
			;;
	esac
done

len=$(git status -s | wc -l)

shift $num_flags

command=$1
shift

items=$(echo "$@" |
# deal with csv
tr ',' ' ' |
tr ' ' '\n' |
# deal with ranges
sed 's/\(\d\)-\(\d\)/\1,\2/' |
# negative indices
awk -v len="$len" '{print ($1 < 0) ? (len + $1) : $1}'
)

for i in $items
do
	if [[ $i -gt $len ]] || [[ $i -le 0 ]]
	then
		echo -n "$i is out of range!"
		echo " $len changed file$([[ $len -gt 1 ]] && echo s)"
		exit
	fi
	indices="$indices${i}p;"
done

command="git $command $(git status -s | cut -c4- | sed -n "$indices")"

if [[ $dry ]]
then
	echo "$command"
else
	eval "$command"
fi
